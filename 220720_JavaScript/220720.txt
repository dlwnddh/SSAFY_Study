JavaScript
웹을 작동시키는 역할
윈도우에서 실행 불가, 브라우저가 있어야 실행 가능

JavaScript 인기 원인
- AJAX
비동기 통신
페이지 새로고침 없이 특정 영역만 변경
ex) 구글 맵
- jQuery(요즘은 안 씀)
- Node.js

console 창
F12 >> Console
새로고침 버튼을 우클릭해서 '캐시 비우기 및 강력 새로고침'으로 새로고침

console.log( )
( )내의 내용을 프린트
마지막 줄에 undefined가 뜨는데, 이는 (일단)무시
console 객체에 존재하는 log()라는 함수

alert( )
경고창 띄우기

변수
메모리의 주소
선언(declaration) : 메모리에 이름 지정(int a;), 한 번 선언한 변수는 여러 번 선언할 수 없다.
배정(asign) : 변수에 값을 넣어주는 과정(a = 1;)
초기화(initailize) : 선언 + 배정(int a = 1;)
전역변수 global, 지역변수 local

JavaScript 변수
타입을 붙이지 않는다.
변수를 선언하지 않고 바로 배정할 수도 있다.
- var (구 버전, 지원은 하지만 비추)
하나의 변수를 여러 번 선언할 수 있다.(변수 선언 규칙 예외)
- let
값을 변경할 수 있다.
- const (상수 변수)
동시에 초기화 필요
만약, 초기화되지 않으면, 경고창이 뜬다.
한 번 입력된 값을 변경할 수 없다.
But, 배열과 객체는 변경(추가, 삭제)할 수 있다.(아예 새롭게 배정하는 건 불가능)

함수 레벨 스코프
함수 내에서 선언된 변수는 함수 내에서만 유효하다.
var

블록 레벨 스코프(더 안전함)
블록 { }내에서 선언된 변수는 코드 블록 내부에서만 유효하다.
let, const

자료형
- number(숫자), string(문자, 문자열), Boolaen(true/false)
- null : 값이 없다고 명시
- undefined : (의도치 않게) 아무 값이 없는 상태
- ★Array : 배열. 대괄호[ ]로 표현한다.(배열 크기 지정 불필요)
- 타입변환을 할때는 해당 타입을 대문자로 시작한다.

배열
.push( ) : 추가
.concat( ) : 배열 이어붙이기
arr = [ ];로 초기화

★함수(function)
함수명은 소문자로 시작하는 camelCase 사용
함수명( ); : 함수 실행 >> 소괄호( )가 있어야 함수가 실행된다.
함수명; : 해당 타입은 funtion
retrun : 함수 내에서 결과값을 내보낸다.
JavaScript에서는 함수도 변수다!
const 함수명 = funtion ( ){ }; 과 같이 변수 선언처럼 함수 선언을 할 수 있다.

호이스팅
선언문만 먼저 끌어올리는 행위
변수 호이스팅 - let, const는 이를 방지한다.

prompt
입력 받을 때 사용한다.

ECMAScript(ES)
Script 언어에 대한 표준(JavaScript가 아니다!)
ES6를 '모던 JavaScript'라고 부른다.

★object(객체)
중괄호{ }로 표현
key와 value로 이루어진 property(속성)의 모음이다.
순서가 없기 때문에, 인덱스 값으로 접근할 수 없다.
value 값으로 function, object, array도 사용될 수 있다.
(메서드) key를 통해 value에 접근하기 위해서는 .으로 이어준다.

문자열.length
문자열 길이
length()가 아님에 주의!

비교
==, != : type이 달라도 true
===, !== : type도 같아야 true

DOM
문서는 거대한 객체다.

HTML에서 js 불러오기
body가 끝나는 부분에 script 태그를 작성하고, src에 .js파일을 불러온다.
header 부분에 작성해도 되지만, 비추

.querySelector( )
특정 DOM 영역 1개를 선택한다.
해당 요소가 여러개라면, 가장 첫번째 요소를 가져온다.
( )안에 태그, 클래스, id를 입력한다.

.querySelectorAll( )
해당하는 모든 DOM을 가져온다.

.textContent
해당 영역 중 text 부분을 불러온다.

Event

콜백 함수
파라미터로 들어가는 함수
이벤트가 발생할 때 까지 기다린다.
특정 조건을 만족해야 실행된다.

이벤트 핸들러
이벤트 발생시 호출되는 함수
(showAlert)

이벤트리스너
이벤트 핸들러를 호출해주는 객체
addEventListner("이벤트 이름", 핸들러 이름); : 이벤트 핸들러(콜백 함수) 등록

.createElement( )
Element Node를 생성한다.
태그 생성

객체.append(target노드)

객체.setAttribute(속성 이름, 속성 값)




tip)
코드 읽을 때, 함수 건너띄고 다른 기본 계산부터
HTML, CSS 모두 언어. but, 프로그래밍 언어x
프로그래밍 언어 : python, JavaScript 등 if / for 등을 사용 가능